25-02-25.20:28:49.674 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 11132 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.20:28:49.676 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.20:28:51.022 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.20:28:51.030 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.20:28:51.030 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.20:28:51.030 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.20:28:51.171 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.20:28:51.171 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1466 ms
25-02-25.20:28:51.368 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.20:28:51.961 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:28:51.970 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:28:53.273 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.20:28:53.289 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.20:28:53.290 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.20:28:53.333 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#32ec9c90:0/SimpleConnection@2fd9fb34 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 61249]
25-02-25.20:28:53.376 [main            ] INFO  Application            - Started Application in 4.136 seconds (JVM running for 5.307)
25-02-25.20:28:55.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:28:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:28:55.029 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:28:55.029 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:28:55.189 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:28:55.189 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:29:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:30.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:29:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:29:55.018 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:50.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:30:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:30:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:21.743 [http-nio-8091-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.20:31:21.743 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.20:31:21.744 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-02-25.20:31:25.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:40.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:31:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:31:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:15.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:15.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:45.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:32:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:32:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:35.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:33:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:33:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:30.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:50.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:34:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:34:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:00.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:09.264 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:35:09.265 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:35:09.491 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:35:09.611 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:35:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:10.025 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:35:10.025 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:35:16.368 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 23324 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.20:35:16.369 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.20:35:17.117 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.20:35:17.121 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.20:35:17.121 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.20:35:17.121 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.20:35:17.228 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.20:35:17.229 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 840 ms
25-02-25.20:35:17.333 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.20:35:17.968 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:35:17.975 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:35:19.020 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.20:35:19.027 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.20:35:19.028 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.20:35:19.044 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#78cfa264:0/SimpleConnection@6cbb7a7d [delegate=amqp://guest@127.0.0.1:5672/, localPort= 61784]
25-02-25.20:35:19.073 [main            ] INFO  Application            - Started Application in 2.913 seconds (JVM running for 3.731)
25-02-25.20:35:20.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:20.025 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:20.027 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:35:20.027 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:35:20.123 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:35:20.123 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:35:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:32.440 [http-nio-8091-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.20:35:32.440 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.20:35:32.440 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-02-25.20:35:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:35:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:55.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:35:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:40.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:50.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:36:55.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:36:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:15.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:40.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:50.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:37:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:37:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:40.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:50.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:38:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:38:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:21.591 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:39:21.591 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:39:21.956 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:39:21.956 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:39:22.360 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:39:22.360 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:39:25.099 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 35136 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.20:39:25.100 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.20:39:25.874 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.20:39:25.877 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.20:39:25.878 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.20:39:25.878 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.20:39:25.993 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.20:39:25.993 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 872 ms
25-02-25.20:39:26.106 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.20:39:26.640 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:39:26.647 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:39:27.675 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.20:39:27.682 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.20:39:27.683 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.20:39:27.699 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#78cfa264:0/SimpleConnection@20349058 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62475]
25-02-25.20:39:27.739 [main            ] INFO  Application            - Started Application in 2.862 seconds (JVM running for 3.721)
25-02-25.20:39:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:30.021 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:30.024 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:39:30.024 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:39:30.117 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:39:30.117 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:39:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:39:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:39:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:00.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:14.191 [http-nio-8091-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.20:40:14.191 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.20:40:14.191 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-02-25.20:40:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:40:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:40:47.249 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:40:47.250 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:40:47.366 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:40:47.366 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:40:47.794 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:40:47.794 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:40:53.261 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 35496 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.20:40:53.263 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.20:40:54.045 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.20:40:54.050 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.20:40:54.050 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.20:40:54.050 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.20:40:54.167 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.20:40:54.167 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 886 ms
25-02-25.20:40:54.279 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.20:40:54.810 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:40:54.816 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:40:56.026 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.20:40:56.032 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.20:40:56.034 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.20:40:56.050 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#78cfa264:0/SimpleConnection@6cbb7a7d [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62775]
25-02-25.20:40:56.081 [main            ] INFO  Application            - Started Application in 3.029 seconds (JVM running for 3.896)
25-02-25.20:41:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:00.025 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:00.029 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:41:00.029 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:41:00.129 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:41:00.129 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:41:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:22.411 [http-nio-8091-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.20:41:22.411 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.20:41:22.412 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-02-25.20:41:22.550 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:41:22.558 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:41:22.569 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:41:22.681 [http-nio-8091-exec-1] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"490208131959","orderState":"create","orderTime":1740299431000,"strategyId":100006,"userId":"xxx"}
25-02-25.20:41:22.681 [http-nio-8091-exec-1] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:41:22.700 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:113)
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:106)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$e2fe27fa.getRateRange(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.getRandomAwardId(StrategyArmoryDispatch.java:121)
	at org.example.domain.strategy.service.rule.chain.impl.DefaultLogicChain.logic(DefaultLogicChain.java:27)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:134)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:54)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:41:25.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:30.090 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:41:30.119 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$f7fa5f4e.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.armory.ActivityArmory.assembleActivitySkuByActivityId(ActivityArmory.java:39)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:41:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:41:50.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:41:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:15.695 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:42:15.735 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.20:42:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:30.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:42:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:42:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:06.213 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:43:06.216 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityCountEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityCountByActivityCountId(ActivityRepository.java:120)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$f7fa5f4e.queryRaffleActivityCountByActivityCountId(<generated>)
	at org.example.domain.activity.service.armory.ActivityArmory.assembleActivitySkuByActivityId(ActivityArmory.java:34)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:43:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:35.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:50.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:43:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:43:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:10.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:10.018 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:35.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:44:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:44:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:15.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:28.326 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:45:28.330 [http-nio-8091-exec-4] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityCountEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityCountByActivityCountId(ActivityRepository.java:120)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$f7fa5f4e.queryRaffleActivityCountByActivityCountId(<generated>)
	at org.example.domain.activity.service.armory.ActivityArmory.assembleActivitySkuByActivityId(ActivityArmory.java:34)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:45:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:50.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:45:55.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:45:55.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:11.033 [http-nio-8091-exec-12] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:46:11.034 [http-nio-8091-exec-12] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$f7fa5f4e.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:46:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:20.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:20.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:35.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:46:50.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:46:51.700 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:46:51.701 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.20:46:51.824 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:46:51.947 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.20:46:52.339 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:46:52.339 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.20:46:59.020 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 35224 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.20:46:59.021 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.20:46:59.779 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.20:46:59.783 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.20:46:59.784 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.20:46:59.784 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.20:46:59.894 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.20:46:59.894 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 854 ms
25-02-25.20:47:00.005 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.20:47:00.527 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:47:00.533 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.20:47:01.578 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.20:47:01.584 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.20:47:01.585 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.20:47:01.603 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#294f9d50:0/SimpleConnection@afde064 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63312]
25-02-25.20:47:01.640 [main            ] INFO  Application            - Started Application in 2.831 seconds (JVM running for 3.669)
25-02-25.20:47:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:05.027 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:05.030 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:47:05.030 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:47:05.120 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:47:05.120 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:47:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:15.842 [http-nio-8091-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.20:47:15.843 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.20:47:15.843 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-02-25.20:47:15.965 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:47:15.969 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.20:47:15.979 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.20:47:16.077 [http-nio-8091-exec-1] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"490208131959","orderState":"create","orderTime":1740299431000,"strategyId":100006,"userId":"xxx"}
25-02-25.20:47:16.077 [http-nio-8091-exec-1] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:47:16.088 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:113)
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:106)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.getRateRange(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.getRandomAwardId(StrategyArmoryDispatch.java:121)
	at org.example.domain.strategy.service.rule.chain.impl.DefaultLogicChain.logic(DefaultLogicChain.java:27)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:134)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:54)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:47:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:20.889 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:47:20.915 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.20:47:23.167 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:47:23.175 [redisson-netty-2-6] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0x9d93eb69, L:/127.0.0.1:63304 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=7, widx=7), command: (GET), promise: java.util.concurrent.CompletableFuture@7c9701e6[Not completed, 1 dependents], params: [big_market_strategy_award_count_key_100006_101]
com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:47:23.180 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
org.redisson.client.RedisException: Unexpected exception while processing command
	at org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:299)
	at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:116)
	at org.redisson.RedissonObject.get(RedissonObject.java:90)
	at org.redisson.RedissonBucket.get(RedissonBucket.java:135)
	at org.example.infrastructure.persistent.redis.RedissonService.getValue(RedissonService.java:31)
	at org.example.infrastructure.persistent.repository.StrategyRepository.cacheStrategyAwardCount(StrategyRepository.java:246)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.cacheStrategyAwardCount(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.cacheStrategyAwardCount(StrategyArmoryDispatch.java:78)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.assembleLotteryStrategy(StrategyArmoryDispatch.java:41)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.assembleLotteryStrategyByActivityId(StrategyArmoryDispatch.java:73)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
25-02-25.20:47:23.180 [redisson-netty-2-6] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0x9d93eb69, L:/127.0.0.1:63304 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
25-02-25.20:47:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:35.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:47:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:47:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:00.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:01.805 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:01.808 [http-nio-8091-exec-4] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"490208131959","orderState":"create","orderTime":1740299431000,"strategyId":100006,"userId":"xxx"}
25-02-25.20:48:01.808 [http-nio-8091-exec-4] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:01.811 [http-nio-8091-exec-4] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:01.812 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:01.842 [http-nio-8091-exec-4] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock"}]}
25-02-25.20:48:01.845 [http-nio-8091-exec-4] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"1","treeId":"tree_lock","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock"}}
25-02-25.20:48:01.847 [http-nio-8091-exec-4] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:01.857 [http-nio-8091-exec-4] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[拦截] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:0
25-02-25.20:48:01.858 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0001
25-02-25.20:48:01.858 [http-nio-8091-exec-4] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:01.858 [http-nio-8091-exec-4] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:01.859 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:01.859 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:01.902 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"99658178710","timestamp":1740487681864}
25-02-25.20:48:01.909 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"99658178710","timestamp":1740487681864}
25-02-25.20:48:03.983 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:04.017 [http-nio-8091-exec-3] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:04.018 [http-nio-8091-exec-3] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:04.018 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:04.022 [http-nio-8091-exec-3] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:04.024 [http-nio-8091-exec-3] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:3
25-02-25.20:48:04.024 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:04.024 [http-nio-8091-exec-3] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:04.037 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:04.037 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:04.037 [http-nio-8091-exec-3] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:04.037 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:04.037 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:04.046 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"93373320811","timestamp":1740487684037}
25-02-25.20:48:04.047 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"93373320811","timestamp":1740487684037}
25-02-25.20:48:04.912 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:04.930 [http-nio-8091-exec-6] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:04.931 [http-nio-8091-exec-6] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:04.931 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:04.932 [http-nio-8091-exec-6] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:04.935 [http-nio-8091-exec-6] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:4
25-02-25.20:48:04.935 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:04.935 [http-nio-8091-exec-6] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:04.936 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:04.936 [http-nio-8091-exec-6] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:04.936 [http-nio-8091-exec-6] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:04.937 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:04.937 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:04.945 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"80141952063","timestamp":1740487684937}
25-02-25.20:48:04.945 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"80141952063","timestamp":1740487684937}
25-02-25.20:48:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:05.658 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:05.672 [http-nio-8091-exec-8] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:05.673 [http-nio-8091-exec-8] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:05.673 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:05.674 [http-nio-8091-exec-8] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:05.676 [http-nio-8091-exec-8] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:5
25-02-25.20:48:05.676 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:05.676 [http-nio-8091-exec-8] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:05.678 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:05.678 [http-nio-8091-exec-8] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:05.678 [http-nio-8091-exec-8] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:05.678 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:05.678 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:05.686 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"62281958828","timestamp":1740487685678}
25-02-25.20:48:05.688 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"62281958828","timestamp":1740487685678}
25-02-25.20:48:06.366 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:06.380 [http-nio-8091-exec-9] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:06.381 [http-nio-8091-exec-9] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:06.381 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:06.382 [http-nio-8091-exec-9] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:06.384 [http-nio-8091-exec-9] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:6
25-02-25.20:48:06.384 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:06.384 [http-nio-8091-exec-9] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:06.385 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:06.385 [http-nio-8091-exec-9] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:06.385 [http-nio-8091-exec-9] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:06.385 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:06.385 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:06.394 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"32832511274","timestamp":1740487686386}
25-02-25.20:48:06.403 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"32832511274","timestamp":1740487686386}
25-02-25.20:48:06.954 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:06.970 [http-nio-8091-exec-10] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:06.973 [http-nio-8091-exec-10] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:06.973 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:06.974 [http-nio-8091-exec-10] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:06.976 [http-nio-8091-exec-10] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:7
25-02-25.20:48:06.976 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:06.976 [http-nio-8091-exec-10] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:06.977 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:06.977 [http-nio-8091-exec-10] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:06.977 [http-nio-8091-exec-10] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:06.977 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:06.977 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:06.986 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"73873748374","timestamp":1740487686977}
25-02-25.20:48:06.987 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"73873748374","timestamp":1740487686977}
25-02-25.20:48:07.563 [http-nio-8091-exec-11] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:07.577 [http-nio-8091-exec-11] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:07.579 [http-nio-8091-exec-11] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:07.579 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:07.580 [http-nio-8091-exec-11] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:07.582 [http-nio-8091-exec-11] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:8
25-02-25.20:48:07.582 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:07.582 [http-nio-8091-exec-11] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:07.583 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:07.583 [http-nio-8091-exec-11] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:07.583 [http-nio-8091-exec-11] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:07.583 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:07.583 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:07.591 [http-nio-8091-exec-11] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"85344747460","timestamp":1740487687583}
25-02-25.20:48:07.591 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"85344747460","timestamp":1740487687583}
25-02-25.20:48:08.134 [http-nio-8091-exec-12] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:08.146 [http-nio-8091-exec-12] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:08.148 [http-nio-8091-exec-12] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:08.148 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:08.149 [http-nio-8091-exec-12] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:08.151 [http-nio-8091-exec-12] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:9
25-02-25.20:48:08.151 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:08.151 [http-nio-8091-exec-12] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:08.152 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:08.152 [http-nio-8091-exec-12] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:08.152 [http-nio-8091-exec-12] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:08.152 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:08.152 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:08.159 [http-nio-8091-exec-12] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"18831450736","timestamp":1740487688152}
25-02-25.20:48:08.160 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"18831450736","timestamp":1740487688152}
25-02-25.20:48:08.679 [http-nio-8091-exec-13] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:08.691 [http-nio-8091-exec-13] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:08.692 [http-nio-8091-exec-13] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:08.692 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:08.694 [http-nio-8091-exec-13] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:08.695 [http-nio-8091-exec-13] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:10
25-02-25.20:48:08.695 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:08.695 [http-nio-8091-exec-13] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:08.696 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:08.696 [http-nio-8091-exec-13] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:08.696 [http-nio-8091-exec-13] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:08.696 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:08.696 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:08.705 [http-nio-8091-exec-13] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"70582367761","timestamp":1740487688696}
25-02-25.20:48:08.706 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"70582367761","timestamp":1740487688696}
25-02-25.20:48:09.344 [http-nio-8091-exec-14] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:48:09.357 [http-nio-8091-exec-14] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:48:09.358 [http-nio-8091-exec-14] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:48:09.358 [http-nio-8091-exec-14] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:48:09.360 [http-nio-8091-exec-14] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:09.361 [http-nio-8091-exec-14] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:11
25-02-25.20:48:09.361 [http-nio-8091-exec-14] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:48:09.361 [http-nio-8091-exec-14] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:48:09.363 [http-nio-8091-exec-14] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:48:09.363 [http-nio-8091-exec-14] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:48:09.363 [http-nio-8091-exec-14] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:48:09.363 [http-nio-8091-exec-14] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:48:09.363 [http-nio-8091-exec-14] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:48:09.371 [http-nio-8091-exec-14] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"58442560642","timestamp":1740487689363}
25-02-25.20:48:09.371 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"58442560642","timestamp":1740487689363}
25-02-25.20:48:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:10.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:15.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:25.021 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:30.020 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:48:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:48:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:55.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:48:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:03.378 [http-nio-8091-exec-15] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:49:03.381 [redisson-netty-2-12] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0xbd3ce9c4, L:/127.0.0.1:63307 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=7, widx=7), command: (GET), promise: java.util.concurrent.CompletableFuture@318d663b[Not completed, 1 dependents], params: [big_market_strategy_award_count_key_100006_101]
com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:49:03.382 [redisson-netty-2-12] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0xbd3ce9c4, L:/127.0.0.1:63307 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
25-02-25.20:49:03.382 [http-nio-8091-exec-15] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
org.redisson.client.RedisException: Unexpected exception while processing command
	at org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:299)
	at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:116)
	at org.redisson.RedissonObject.get(RedissonObject.java:90)
	at org.redisson.RedissonBucket.get(RedissonBucket.java:135)
	at org.example.infrastructure.persistent.redis.RedissonService.getValue(RedissonService.java:31)
	at org.example.infrastructure.persistent.repository.StrategyRepository.cacheStrategyAwardCount(StrategyRepository.java:246)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.cacheStrategyAwardCount(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.cacheStrategyAwardCount(StrategyArmoryDispatch.java:78)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.assembleLotteryStrategy(StrategyArmoryDispatch.java:41)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.assembleLotteryStrategyByActivityId(StrategyArmoryDispatch.java:73)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 49
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
25-02-25.20:49:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:05.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:06.470 [http-nio-8091-exec-16] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:49:06.483 [http-nio-8091-exec-16] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:49:06.484 [http-nio-8091-exec-16] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:49:06.484 [http-nio-8091-exec-16] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:49:06.486 [http-nio-8091-exec-16] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:49:06.487 [http-nio-8091-exec-16] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:12
25-02-25.20:49:06.487 [http-nio-8091-exec-16] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:49:06.487 [http-nio-8091-exec-16] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:49:06.488 [http-nio-8091-exec-16] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:49:06.488 [http-nio-8091-exec-16] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:49:06.488 [http-nio-8091-exec-16] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:49:06.488 [http-nio-8091-exec-16] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:49:06.488 [http-nio-8091-exec-16] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:49:06.501 [http-nio-8091-exec-16] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"57542521239","timestamp":1740487746489}
25-02-25.20:49:06.502 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"57542521239","timestamp":1740487746489}
25-02-25.20:49:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:49:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:19.641 [http-nio-8091-exec-17] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:49:19.656 [http-nio-8091-exec-17] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:49:19.657 [http-nio-8091-exec-17] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.20:49:19.658 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.20:49:19.659 [http-nio-8091-exec-17] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:102
25-02-25.20:49:19.660 [http-nio-8091-exec-17] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:102 raffleCount:1 userRaffleCount:13
25-02-25.20:49:19.660 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_lock code:0000
25-02-25.20:49:19.660 [http-nio-8091-exec-17] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.20:49:19.661 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_stock code:0001
25-02-25.20:49:19.661 [http-nio-8091-exec-17] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.20:49:19.661 [http-nio-8091-exec-17] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.20:49:19.661 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock node:rule_luck_award code:0001
25-02-25.20:49:19.662 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.20:49:19.669 [http-nio-8091-exec-17] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"84889171659","timestamp":1740487759662}
25-02-25.20:49:19.670 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"84889171659","timestamp":1740487759662}
25-02-25.20:49:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.20:49:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:40.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:49:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:49:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:05.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:30.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:50:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:50:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:20.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:51:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:51:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:30.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:40.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:52:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:52:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:00.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:40.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:53:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:53:55.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:00.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:27.888 [http-nio-8091-exec-20] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:54:27.898 [http-nio-8091-exec-20] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.20:54:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:30.594 [http-nio-8091-exec-21] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:54:30.607 [http-nio-8091-exec-21] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:54:30.609 [http-nio-8091-exec-21] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.20:54:30.609 [http-nio-8091-exec-21] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.20:54:30.612 [http-nio-8091-exec-21] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.20:54:30.612 [http-nio-8091-exec-21] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.20:54:30.612 [http-nio-8091-exec-21] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:54:32.820 [http-nio-8091-exec-22] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:54:32.821 [http-nio-8091-exec-22] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"050200474092","orderState":"create","orderTime":1740488071000,"strategyId":100006,"userId":"xxx"}
25-02-25.20:54:32.821 [http-nio-8091-exec-22] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:54:32.823 [http-nio-8091-exec-22] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.20:54:32.823 [http-nio-8091-exec-22] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.20:54:32.825 [http-nio-8091-exec-22] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.20:54:32.825 [http-nio-8091-exec-22] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.20:54:32.825 [http-nio-8091-exec-22] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:54:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:40.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:54:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:54:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:19.577 [http-nio-8091-exec-23] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.20:55:19.589 [http-nio-8091-exec-23] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.20:55:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:21.824 [http-nio-8091-exec-24] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.20:55:21.826 [http-nio-8091-exec-24] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"050200474092","orderState":"create","orderTime":1740488071000,"strategyId":100006,"userId":"xxx"}
25-02-25.20:55:21.826 [http-nio-8091-exec-24] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.20:55:21.827 [http-nio-8091-exec-24] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.20:55:21.827 [http-nio-8091-exec-24] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.20:55:21.830 [http-nio-8091-exec-24] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.20:55:21.830 [http-nio-8091-exec-24] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.20:55:21.830 [http-nio-8091-exec-24] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.20:55:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:30.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:55:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:55:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:35.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:40.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:45.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:56:50.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:56:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:05.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:35.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:45.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:50.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:57:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:57:55.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:00.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:00.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:20.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:58:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:58:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:15.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:30.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:35.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:40.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.20:59:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.20:59:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:00.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:20.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:20.018 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:25.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:00:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:00:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:50.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:01:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:01:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:45.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:02:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:02:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:21.527 [http-nio-8091-exec-27] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.21:03:21.568 [http-nio-8091-exec-27] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.21:03:24.315 [http-nio-8091-exec-28] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:03:24.329 [http-nio-8091-exec-28] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"050200474092","orderState":"create","orderTime":1740488071000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:03:24.329 [http-nio-8091-exec-28] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:03:24.333 [http-nio-8091-exec-28] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.21:03:24.334 [http-nio-8091-exec-28] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.21:03:24.340 [http-nio-8091-exec-28] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.21:03:24.340 [http-nio-8091-exec-28] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.21:03:24.343 [http-nio-8091-exec-28] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.21:03:24.348 [http-nio-8091-exec-28] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:03:24.348 [http-nio-8091-exec-28] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 102 
25-02-25.21:03:24.376 [http-nio-8091-exec-28] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"02933656556","timestamp":1740488604351}
25-02-25.21:03:24.392 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"02933656556","timestamp":1740488604351}
25-02-25.21:03:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:25.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:27.274 [http-nio-8091-exec-34] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:03:27.293 [http-nio-8091-exec-34] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:03:27.295 [http-nio-8091-exec-34] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:03:27.295 [http-nio-8091-exec-34] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:03:27.298 [http-nio-8091-exec-34] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:03:27.298 [http-nio-8091-exec-34] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:03:27.306 [http-nio-8091-exec-34] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:03:29.153 [http-nio-8091-exec-30] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:03:29.156 [http-nio-8091-exec-30] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"021744632767","orderState":"create","orderTime":1740488607000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:03:29.156 [http-nio-8091-exec-30] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:03:29.157 [http-nio-8091-exec-30] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:03:29.157 [http-nio-8091-exec-30] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:03:29.159 [http-nio-8091-exec-30] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:03:29.159 [http-nio-8091-exec-30] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:03:29.165 [http-nio-8091-exec-30] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:03:29.989 [http-nio-8091-exec-36] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:03:29.991 [http-nio-8091-exec-36] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"021744632767","orderState":"create","orderTime":1740488607000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:03:29.991 [http-nio-8091-exec-36] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:03:29.992 [http-nio-8091-exec-36] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:03:29.992 [http-nio-8091-exec-36] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:03:29.995 [http-nio-8091-exec-36] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:03:29.995 [http-nio-8091-exec-36] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:03:29.995 [http-nio-8091-exec-36] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:03:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.21:03:30.021 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:03:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:03:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:25.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:04:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:04:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:15.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:35.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:47.238 [http-nio-8091-exec-29] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.21:05:47.255 [http-nio-8091-exec-29] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.21:05:49.393 [http-nio-8091-exec-35] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:49.395 [http-nio-8091-exec-35] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"021744632767","orderState":"create","orderTime":1740488607000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:05:49.395 [http-nio-8091-exec-35] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:49.396 [http-nio-8091-exec-35] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.21:05:49.396 [http-nio-8091-exec-35] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.21:05:49.400 [http-nio-8091-exec-35] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.21:05:49.400 [http-nio-8091-exec-35] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.21:05:49.400 [http-nio-8091-exec-35] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.21:05:49.401 [http-nio-8091-exec-35] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:05:49.401 [http-nio-8091-exec-35] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 105 
25-02-25.21:05:49.410 [http-nio-8091-exec-35] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"87655243612","timestamp":1740488749402}
25-02-25.21:05:49.414 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"87655243612","timestamp":1740488749402}
25-02-25.21:05:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:50.454 [http-nio-8091-exec-31] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:50.465 [http-nio-8091-exec-31] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:50.466 [http-nio-8091-exec-31] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.21:05:50.466 [http-nio-8091-exec-31] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.21:05:50.468 [http-nio-8091-exec-31] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.21:05:50.469 [http-nio-8091-exec-31] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:05:50.469 [http-nio-8091-exec-31] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 105 
25-02-25.21:05:50.482 [http-nio-8091-exec-31] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"78204062655","timestamp":1740488750473}
25-02-25.21:05:50.483 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"78204062655","timestamp":1740488750473}
25-02-25.21:05:51.309 [http-nio-8091-exec-37] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:51.323 [http-nio-8091-exec-37] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:51.324 [http-nio-8091-exec-37] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 103
25-02-25.21:05:51.324 [http-nio-8091-exec-37] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 103 rule_default
25-02-25.21:05:51.325 [http-nio-8091-exec-37] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:103
25-02-25.21:05:51.326 [http-nio-8091-exec-37] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:05:51.326 [http-nio-8091-exec-37] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 103 
25-02-25.21:05:51.340 [http-nio-8091-exec-37] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"55339246038","timestamp":1740488751328}
25-02-25.21:05:51.341 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"55339246038","timestamp":1740488751328}
25-02-25.21:05:52.239 [http-nio-8091-exec-38] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:52.258 [http-nio-8091-exec-38] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:52.259 [http-nio-8091-exec-38] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:05:52.259 [http-nio-8091-exec-38] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:05:52.261 [http-nio-8091-exec-38] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:05:52.261 [http-nio-8091-exec-38] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:05:52.261 [http-nio-8091-exec-38] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:05:53.672 [http-nio-8091-exec-39] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:53.674 [http-nio-8091-exec-39] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"512233219895","orderState":"create","orderTime":1740488752000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:05:53.674 [http-nio-8091-exec-39] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:53.675 [http-nio-8091-exec-39] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.21:05:53.675 [http-nio-8091-exec-39] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.21:05:53.676 [http-nio-8091-exec-39] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.21:05:53.677 [http-nio-8091-exec-39] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:05:53.677 [http-nio-8091-exec-39] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 102 
25-02-25.21:05:53.685 [http-nio-8091-exec-39] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"24287080457","timestamp":1740488753678}
25-02-25.21:05:53.687 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"24287080457","timestamp":1740488753678}
25-02-25.21:05:54.739 [http-nio-8091-exec-40] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:54.754 [http-nio-8091-exec-40] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:54.756 [http-nio-8091-exec-40] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:05:54.756 [http-nio-8091-exec-40] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:05:54.758 [http-nio-8091-exec-40] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:05:54.758 [http-nio-8091-exec-40] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:05:54.758 [http-nio-8091-exec-40] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:05:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:05:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:05:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:105
25-02-25.21:05:55.755 [http-nio-8091-exec-41] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:05:55.757 [http-nio-8091-exec-41] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"471642439362","orderState":"create","orderTime":1740488755000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:05:55.757 [http-nio-8091-exec-41] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:05:55.758 [http-nio-8091-exec-41] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 103
25-02-25.21:05:55.758 [http-nio-8091-exec-41] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 103 rule_default
25-02-25.21:05:55.759 [http-nio-8091-exec-41] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:103
25-02-25.21:05:55.761 [http-nio-8091-exec-41] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:05:55.761 [http-nio-8091-exec-41] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 103 
25-02-25.21:05:55.770 [http-nio-8091-exec-41] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"67520339803","timestamp":1740488755761}
25-02-25.21:05:55.771 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"67520339803","timestamp":1740488755761}
25-02-25.21:06:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:105
25-02-25.21:06:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:103
25-02-25.21:06:05.018 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.21:06:10.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:103
25-02-25.21:06:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:35.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:50.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:06:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:06:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:15.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:30.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:50.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:07:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:07:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:08:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:08:55.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:15.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:45.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:09:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:09:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:10:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:10:55.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:30.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:45.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:45.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:11:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:11:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:40.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:12:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:12:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:13:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:13:55.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:00.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:00.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:15.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:40.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:14:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:14:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:00.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:15:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:15:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:10.018 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:16:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:16:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:17:50.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:55.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:17:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:05.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:15.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:40.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:18:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:18:55.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:40.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:19:50.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:19:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:00.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:15.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:20.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:20.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:20:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:20:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:15.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:40.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:21:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:21:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:05.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:40.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:22:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:22:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:05.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:10.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:10.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:15.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:35.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:23:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:23:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:45.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:24:50.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:55.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:24:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:00.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:35.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:40.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:50.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:25:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:25:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:05.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:25.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:35.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:40.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:50.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:26:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:26:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:30.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:45.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:27:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:27:55.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:20.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:25.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:28:50.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:28:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:30.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:45.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:50.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:29:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:29:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:30.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:40.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:30:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:30:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:40.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:31:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:31:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:05.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:40.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:32:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:32:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:20.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:35.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:33:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:33:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:34:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:34:55.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:15.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:45.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:45.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:35:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:35:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:10.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:40.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:36:55.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:36:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:00.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:05.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:20.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:37:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:37:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:25.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:27.725 [http-nio-8091-exec-44] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.21:38:27.752 [http-nio-8091-exec-44] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.21:38:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:30.663 [http-nio-8091-exec-45] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:30.685 [http-nio-8091-exec-45] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:30.688 [http-nio-8091-exec-45] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 101
25-02-25.21:38:30.688 [http-nio-8091-exec-45] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 101 rule_default
25-02-25.21:38:30.694 [http-nio-8091-exec-45] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.21:38:30.694 [http-nio-8091-exec-45] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.21:38:30.695 [http-nio-8091-exec-45] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:101
25-02-25.21:38:30.696 [http-nio-8091-exec-45] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:38:30.696 [http-nio-8091-exec-45] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 
25-02-25.21:38:30.708 [http-nio-8091-exec-45] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"22607920852","timestamp":1740490710698}
25-02-25.21:38:30.712 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"22607920852","timestamp":1740490710698}
25-02-25.21:38:31.494 [http-nio-8091-exec-46] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:31.509 [http-nio-8091-exec-46] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:31.510 [http-nio-8091-exec-46] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 108
25-02-25.21:38:31.510 [http-nio-8091-exec-46] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 108 rule_default
25-02-25.21:38:31.518 [http-nio-8091-exec-46] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_2"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]}
25-02-25.21:38:31.519 [http-nio-8091-exec-46] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"2","treeId":"tree_lock_2","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_2"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_2","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_2"}}
25-02-25.21:38:31.519 [http-nio-8091-exec-46] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:108
25-02-25.21:38:31.522 [http-nio-8091-exec-46] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:108 raffleCount:2 userRaffleCount:21
25-02-25.21:38:31.522 [http-nio-8091-exec-46] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_lock code:0000
25-02-25.21:38:31.522 [http-nio-8091-exec-46] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:108
25-02-25.21:38:31.524 [http-nio-8091-exec-46] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_stock code:0001
25-02-25.21:38:31.524 [http-nio-8091-exec-46] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:108 ruleValue:101:1,100
25-02-25.21:38:31.524 [http-nio-8091-exec-46] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:108 awardRuleValue:1,100
25-02-25.21:38:31.524 [http-nio-8091-exec-46] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_luck_award code:0001
25-02-25.21:38:31.524 [http-nio-8091-exec-46] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:38:31.546 [http-nio-8091-exec-46] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"51040125573","timestamp":1740490711524}
25-02-25.21:38:31.547 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"51040125573","timestamp":1740490711524}
25-02-25.21:38:32.349 [http-nio-8091-exec-47] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:32.366 [http-nio-8091-exec-47] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:32.368 [http-nio-8091-exec-47] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:38:32.368 [http-nio-8091-exec-47] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:38:32.371 [http-nio-8091-exec-47] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:38:32.371 [http-nio-8091-exec-47] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:38:32.373 [http-nio-8091-exec-47] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:38:33.110 [http-nio-8091-exec-49] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:33.113 [http-nio-8091-exec-49] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"293055857508","orderState":"create","orderTime":1740490712000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:38:33.113 [http-nio-8091-exec-49] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:33.113 [http-nio-8091-exec-49] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:38:33.113 [http-nio-8091-exec-49] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:38:33.116 [http-nio-8091-exec-49] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:38:33.116 [http-nio-8091-exec-49] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:38:33.116 [http-nio-8091-exec-49] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:38:33.940 [http-nio-8091-exec-50] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:33.942 [http-nio-8091-exec-50] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"293055857508","orderState":"create","orderTime":1740490712000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:38:33.942 [http-nio-8091-exec-50] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:33.943 [http-nio-8091-exec-50] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 106
25-02-25.21:38:33.943 [http-nio-8091-exec-50] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 106 rule_default
25-02-25.21:38:33.946 [http-nio-8091-exec-50] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]}
25-02-25.21:38:33.946 [http-nio-8091-exec-50] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"1","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_1"}}
25-02-25.21:38:33.947 [http-nio-8091-exec-50] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:106
25-02-25.21:38:33.948 [http-nio-8091-exec-50] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:106 raffleCount:1 userRaffleCount:22
25-02-25.21:38:33.948 [http-nio-8091-exec-50] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:38:33.948 [http-nio-8091-exec-50] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:106
25-02-25.21:38:33.949 [http-nio-8091-exec-50] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:38:33.949 [http-nio-8091-exec-50] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 106 
25-02-25.21:38:33.960 [http-nio-8091-exec-50] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":106,"awardTitle":"3等奖","userId":"xxx"},"id":"73931203681","timestamp":1740490713951}
25-02-25.21:38:33.962 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":106,"awardTitle":"3等奖","userId":"xxx"},"id":"73931203681","timestamp":1740490713951}
25-02-25.21:38:34.622 [http-nio-8091-exec-48] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:34.634 [http-nio-8091-exec-48] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:34.635 [http-nio-8091-exec-48] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.21:38:34.635 [http-nio-8091-exec-48] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.21:38:34.637 [http-nio-8091-exec-48] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.21:38:34.638 [http-nio-8091-exec-48] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:38:34.638 [http-nio-8091-exec-48] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 104 
25-02-25.21:38:34.647 [http-nio-8091-exec-48] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"34876324042","timestamp":1740490714639}
25-02-25.21:38:34.648 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"34876324042","timestamp":1740490714639}
25-02-25.21:38:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:101
25-02-25.21:38:35.264 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:38:35.277 [http-nio-8091-exec-2] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:38:35.278 [http-nio-8091-exec-2] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:38:35.278 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:38:35.281 [http-nio-8091-exec-2] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:38:35.281 [http-nio-8091-exec-2] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:38:35.281 [http-nio-8091-exec-2] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:38:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:108
25-02-25.21:38:40.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:106
25-02-25.21:38:45.018 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.21:38:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:38:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:38:55.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:15.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:26.911 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:39:26.916 [http-nio-8091-exec-1] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"643349883373","orderState":"create","orderTime":1740490715000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:39:26.916 [http-nio-8091-exec-1] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:39:26.919 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:113)
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:106)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.getRateRange(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.getRandomAwardId(StrategyArmoryDispatch.java:121)
	at org.example.domain.strategy.service.rule.chain.impl.DefaultLogicChain.logic(DefaultLogicChain.java:27)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:134)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:54)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:39:29.487 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.21:39:29.503 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.21:39:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:31.382 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:39:31.385 [http-nio-8091-exec-5] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"643349883373","orderState":"create","orderTime":1740490715000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:39:31.385 [http-nio-8091-exec-5] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:39:31.387 [http-nio-8091-exec-5] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.21:39:31.388 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.21:39:31.395 [http-nio-8091-exec-5] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]}
25-02-25.21:39:31.395 [http-nio-8091-exec-5] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"1","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_1"}}
25-02-25.21:39:31.396 [http-nio-8091-exec-5] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.21:39:31.398 [http-nio-8091-exec-5] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:24
25-02-25.21:39:31.398 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:39:31.398 [http-nio-8091-exec-5] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.21:39:31.399 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:39:31.399 [http-nio-8091-exec-5] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:107 ruleValue:101:1,100
25-02-25.21:39:31.399 [http-nio-8091-exec-5] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:107 awardRuleValue:1,100
25-02-25.21:39:31.399 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_luck_award code:0001
25-02-25.21:39:31.399 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:39:31.413 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"07016720463","timestamp":1740490771401}
25-02-25.21:39:31.414 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"07016720463","timestamp":1740490771401}
25-02-25.21:39:32.227 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:39:32.244 [http-nio-8091-exec-4] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:39:32.246 [http-nio-8091-exec-4] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.21:39:32.246 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.21:39:32.254 [http-nio-8091-exec-4] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.21:39:32.255 [http-nio-8091-exec-4] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.21:39:32.255 [http-nio-8091-exec-4] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.21:39:32.257 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:39:32.257 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 105 
25-02-25.21:39:32.268 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"12414307126","timestamp":1740490772259}
25-02-25.21:39:32.270 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"12414307126","timestamp":1740490772259}
25-02-25.21:39:32.984 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:39:33.000 [http-nio-8091-exec-3] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:39:33.002 [http-nio-8091-exec-3] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:39:33.002 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:39:33.007 [http-nio-8091-exec-3] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:39:33.007 [http-nio-8091-exec-3] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:39:33.007 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:39:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:107
25-02-25.21:39:40.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:105
25-02-25.21:39:40.021 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:45.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:39:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:39:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:25.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:30.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:50.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:40:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:40:55.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:41:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:41:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:44.833 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.21:42:44.853 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.21:42:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:46.742 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:46.745 [http-nio-8091-exec-10] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"476924732464","orderState":"create","orderTime":1740490773000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:42:46.745 [http-nio-8091-exec-10] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:46.747 [http-nio-8091-exec-10] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.21:42:46.747 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.21:42:46.752 [http-nio-8091-exec-10] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.21:42:46.752 [http-nio-8091-exec-10] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.21:42:46.753 [http-nio-8091-exec-10] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.21:42:46.754 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:42:46.755 [http-nio-8091-exec-10] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.21:42:46.755 [http-nio-8091-exec-10] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.21:42:46.755 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_luck_award code:0001
25-02-25.21:42:46.755 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:46.767 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"56512699346","timestamp":1740490966757}
25-02-25.21:42:46.769 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"56512699346","timestamp":1740490966757}
25-02-25.21:42:47.580 [http-nio-8091-exec-11] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:47.596 [http-nio-8091-exec-11] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:47.598 [http-nio-8091-exec-11] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.21:42:47.598 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.21:42:47.600 [http-nio-8091-exec-11] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.21:42:47.601 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:42:47.601 [http-nio-8091-exec-11] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:104 ruleValue:101:1,100
25-02-25.21:42:47.601 [http-nio-8091-exec-11] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:104 awardRuleValue:1,100
25-02-25.21:42:47.601 [http-nio-8091-exec-11] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_luck_award code:0001
25-02-25.21:42:47.601 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:47.612 [http-nio-8091-exec-11] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"33375267062","timestamp":1740490967601}
25-02-25.21:42:47.613 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"33375267062","timestamp":1740490967601}
25-02-25.21:42:48.357 [http-nio-8091-exec-12] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:48.374 [http-nio-8091-exec-12] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:48.377 [http-nio-8091-exec-12] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.21:42:48.377 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.21:42:48.382 [http-nio-8091-exec-12] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]}
25-02-25.21:42:48.382 [http-nio-8091-exec-12] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"1","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_1"}}
25-02-25.21:42:48.383 [http-nio-8091-exec-12] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.21:42:48.385 [http-nio-8091-exec-12] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:28
25-02-25.21:42:48.385 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:42:48.385 [http-nio-8091-exec-12] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.21:42:48.387 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:42:48.387 [http-nio-8091-exec-12] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:107 ruleValue:101:1,100
25-02-25.21:42:48.387 [http-nio-8091-exec-12] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:107 awardRuleValue:1,100
25-02-25.21:42:48.387 [http-nio-8091-exec-12] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_luck_award code:0001
25-02-25.21:42:48.387 [http-nio-8091-exec-12] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:48.397 [http-nio-8091-exec-12] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"58724529667","timestamp":1740490968387}
25-02-25.21:42:48.398 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"58724529667","timestamp":1740490968387}
25-02-25.21:42:49.224 [http-nio-8091-exec-13] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:49.240 [http-nio-8091-exec-13] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:49.242 [http-nio-8091-exec-13] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.21:42:49.242 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.21:42:49.244 [http-nio-8091-exec-13] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.21:42:49.245 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:42:49.245 [http-nio-8091-exec-13] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.21:42:49.245 [http-nio-8091-exec-13] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.21:42:49.245 [http-nio-8091-exec-13] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_luck_award code:0001
25-02-25.21:42:49.245 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:49.255 [http-nio-8091-exec-13] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"03109788027","timestamp":1740490969245}
25-02-25.21:42:49.256 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"03109788027","timestamp":1740490969245}
25-02-25.21:42:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.21:42:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:42:50.023 [http-nio-8091-exec-14] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:50.038 [http-nio-8091-exec-14] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:50.040 [http-nio-8091-exec-14] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.21:42:50.040 [http-nio-8091-exec-14] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.21:42:50.042 [http-nio-8091-exec-14] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.21:42:50.044 [http-nio-8091-exec-14] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:42:50.044 [http-nio-8091-exec-14] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:104 ruleValue:101:1,100
25-02-25.21:42:50.044 [http-nio-8091-exec-14] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:104 awardRuleValue:1,100
25-02-25.21:42:50.044 [http-nio-8091-exec-14] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_luck_award code:0001
25-02-25.21:42:50.044 [http-nio-8091-exec-14] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:50.054 [http-nio-8091-exec-14] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"48496045970","timestamp":1740490970044}
25-02-25.21:42:50.055 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"48496045970","timestamp":1740490970044}
25-02-25.21:42:50.752 [http-nio-8091-exec-15] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:50.769 [http-nio-8091-exec-15] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:50.771 [http-nio-8091-exec-15] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.21:42:50.771 [http-nio-8091-exec-15] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.21:42:50.773 [http-nio-8091-exec-15] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.21:42:50.775 [http-nio-8091-exec-15] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:42:50.775 [http-nio-8091-exec-15] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 ruleValue:101:1,100
25-02-25.21:42:50.775 [http-nio-8091-exec-15] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:102 awardRuleValue:1,100
25-02-25.21:42:50.775 [http-nio-8091-exec-15] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_luck_award code:0001
25-02-25.21:42:50.775 [http-nio-8091-exec-15] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:50.785 [http-nio-8091-exec-15] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"61804460599","timestamp":1740490970775}
25-02-25.21:42:50.787 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"61804460599","timestamp":1740490970775}
25-02-25.21:42:51.387 [http-nio-8091-exec-16] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:51.404 [http-nio-8091-exec-16] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:51.407 [http-nio-8091-exec-16] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:42:51.407 [http-nio-8091-exec-16] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:42:51.411 [http-nio-8091-exec-16] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:42:51.411 [http-nio-8091-exec-16] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:42:51.411 [http-nio-8091-exec-16] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:42:51.947 [http-nio-8091-exec-17] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:51.950 [http-nio-8091-exec-17] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"572839150547","orderState":"create","orderTime":1740490971000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:42:51.950 [http-nio-8091-exec-17] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:51.952 [http-nio-8091-exec-17] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:42:51.952 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:42:51.957 [http-nio-8091-exec-17] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:42:51.957 [http-nio-8091-exec-17] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:42:51.957 [http-nio-8091-exec-17] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:42:52.726 [http-nio-8091-exec-18] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:52.728 [http-nio-8091-exec-18] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"572839150547","orderState":"create","orderTime":1740490971000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:42:52.728 [http-nio-8091-exec-18] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:52.731 [http-nio-8091-exec-18] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:42:52.731 [http-nio-8091-exec-18] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:42:52.736 [http-nio-8091-exec-18] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:42:52.736 [http-nio-8091-exec-18] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:42:52.736 [http-nio-8091-exec-18] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:42:53.393 [http-nio-8091-exec-19] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:53.395 [http-nio-8091-exec-19] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"572839150547","orderState":"create","orderTime":1740490971000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:42:53.395 [http-nio-8091-exec-19] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:53.398 [http-nio-8091-exec-19] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:42:53.398 [http-nio-8091-exec-19] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:42:53.402 [http-nio-8091-exec-19] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:42:53.402 [http-nio-8091-exec-19] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:42:53.402 [http-nio-8091-exec-19] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:42:54.002 [http-nio-8091-exec-20] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:54.005 [http-nio-8091-exec-20] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"572839150547","orderState":"create","orderTime":1740490971000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:42:54.005 [http-nio-8091-exec-20] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:54.007 [http-nio-8091-exec-20] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.21:42:54.007 [http-nio-8091-exec-20] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.21:42:54.009 [http-nio-8091-exec-20] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.21:42:54.011 [http-nio-8091-exec-20] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:32
25-02-25.21:42:54.011 [http-nio-8091-exec-20] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:42:54.011 [http-nio-8091-exec-20] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.21:42:54.013 [http-nio-8091-exec-20] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:42:54.013 [http-nio-8091-exec-20] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:107 ruleValue:101:1,100
25-02-25.21:42:54.013 [http-nio-8091-exec-20] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:107 awardRuleValue:1,100
25-02-25.21:42:54.013 [http-nio-8091-exec-20] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_luck_award code:0001
25-02-25.21:42:54.013 [http-nio-8091-exec-20] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:54.022 [http-nio-8091-exec-20] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"51213656418","timestamp":1740490974013}
25-02-25.21:42:54.023 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"51213656418","timestamp":1740490974013}
25-02-25.21:42:54.682 [http-nio-8091-exec-21] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:42:54.700 [http-nio-8091-exec-21] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:42:54.701 [http-nio-8091-exec-21] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.21:42:54.702 [http-nio-8091-exec-21] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.21:42:54.704 [http-nio-8091-exec-21] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.21:42:54.705 [http-nio-8091-exec-21] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:42:54.705 [http-nio-8091-exec-21] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:105 ruleValue:101:1,100
25-02-25.21:42:54.705 [http-nio-8091-exec-21] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:xxx strategyId:100006 awardId:105 awardRuleValue:1,100
25-02-25.21:42:54.706 [http-nio-8091-exec-21] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_luck_award code:0001
25-02-25.21:42:54.706 [http-nio-8091-exec-21] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 1,100
25-02-25.21:42:54.716 [http-nio-8091-exec-21] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"43873431642","timestamp":1740490974706}
25-02-25.21:42:54.717 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"43873431642","timestamp":1740490974706}
25-02-25.21:42:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:42:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.21:42:55.021 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:00.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:107
25-02-25.21:43:05.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.21:43:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.21:43:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.21:43:15.018 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:19.610 [http-nio-8091-exec-22] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.21:43:19.630 [http-nio-8091-exec-22] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.21:43:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:22.342 [http-nio-8091-exec-23] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:22.358 [http-nio-8091-exec-23] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:22.361 [http-nio-8091-exec-23] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:43:22.361 [http-nio-8091-exec-23] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:43:22.365 [http-nio-8091-exec-23] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:43:22.365 [http-nio-8091-exec-23] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:43:22.365 [http-nio-8091-exec-23] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:43:23.279 [http-nio-8091-exec-24] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:23.282 [http-nio-8091-exec-24] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"702072978951","orderState":"create","orderTime":1740491002000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:43:23.282 [http-nio-8091-exec-24] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:23.284 [http-nio-8091-exec-24] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:43:23.284 [http-nio-8091-exec-24] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:43:23.288 [http-nio-8091-exec-24] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:43:23.288 [http-nio-8091-exec-24] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:43:23.288 [http-nio-8091-exec-24] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:43:24.057 [http-nio-8091-exec-25] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:24.060 [http-nio-8091-exec-25] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"702072978951","orderState":"create","orderTime":1740491002000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:43:24.060 [http-nio-8091-exec-25] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:24.063 [http-nio-8091-exec-25] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 103
25-02-25.21:43:24.063 [http-nio-8091-exec-25] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 103 rule_default
25-02-25.21:43:24.068 [http-nio-8091-exec-25] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.21:43:24.068 [http-nio-8091-exec-25] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.21:43:24.068 [http-nio-8091-exec-25] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:103
25-02-25.21:43:24.070 [http-nio-8091-exec-25] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:43:24.070 [http-nio-8091-exec-25] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 103 
25-02-25.21:43:24.083 [http-nio-8091-exec-25] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"13426601773","timestamp":1740491004071}
25-02-25.21:43:24.085 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"13426601773","timestamp":1740491004071}
25-02-25.21:43:24.683 [http-nio-8091-exec-26] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:24.699 [http-nio-8091-exec-26] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:24.701 [http-nio-8091-exec-26] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.21:43:24.701 [http-nio-8091-exec-26] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.21:43:24.703 [http-nio-8091-exec-26] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.21:43:24.705 [http-nio-8091-exec-26] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:43:24.705 [http-nio-8091-exec-26] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 102 
25-02-25.21:43:24.716 [http-nio-8091-exec-26] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"25389404391","timestamp":1740491004706}
25-02-25.21:43:24.718 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"25389404391","timestamp":1740491004706}
25-02-25.21:43:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:25.492 [http-nio-8091-exec-27] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:25.510 [http-nio-8091-exec-27] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:25.512 [http-nio-8091-exec-27] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 101
25-02-25.21:43:25.512 [http-nio-8091-exec-27] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 101 rule_default
25-02-25.21:43:25.514 [http-nio-8091-exec-27] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:101
25-02-25.21:43:25.515 [http-nio-8091-exec-27] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:43:25.515 [http-nio-8091-exec-27] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 
25-02-25.21:43:25.527 [http-nio-8091-exec-27] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"34467558931","timestamp":1740491005517}
25-02-25.21:43:25.534 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"34467558931","timestamp":1740491005517}
25-02-25.21:43:26.358 [http-nio-8091-exec-28] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:26.377 [http-nio-8091-exec-28] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:26.380 [http-nio-8091-exec-28] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:43:26.380 [http-nio-8091-exec-28] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:43:26.384 [http-nio-8091-exec-28] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:43:26.384 [http-nio-8091-exec-28] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:43:26.384 [http-nio-8091-exec-28] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:43:27.143 [http-nio-8091-exec-34] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:27.145 [http-nio-8091-exec-34] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"738766779777","orderState":"create","orderTime":1740491006000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:43:27.145 [http-nio-8091-exec-34] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:27.147 [http-nio-8091-exec-34] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.21:43:27.147 [http-nio-8091-exec-34] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.21:43:27.149 [http-nio-8091-exec-34] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.21:43:27.151 [http-nio-8091-exec-34] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:43:27.151 [http-nio-8091-exec-34] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 104 
25-02-25.21:43:27.162 [http-nio-8091-exec-34] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"73514591037","timestamp":1740491007153}
25-02-25.21:43:27.163 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"73514591037","timestamp":1740491007153}
25-02-25.21:43:27.986 [http-nio-8091-exec-30] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:28.003 [http-nio-8091-exec-30] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:28.006 [http-nio-8091-exec-30] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.21:43:28.006 [http-nio-8091-exec-30] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.21:43:28.008 [http-nio-8091-exec-30] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.21:43:28.009 [http-nio-8091-exec-30] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:43:28.009 [http-nio-8091-exec-30] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 105 
25-02-25.21:43:28.021 [http-nio-8091-exec-30] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"57222509662","timestamp":1740491008013}
25-02-25.21:43:28.023 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"57222509662","timestamp":1740491008013}
25-02-25.21:43:28.811 [http-nio-8091-exec-36] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:43:28.828 [http-nio-8091-exec-36] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:43:28.831 [http-nio-8091-exec-36] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:43:28.831 [http-nio-8091-exec-36] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:43:28.835 [http-nio-8091-exec-36] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:43:28.835 [http-nio-8091-exec-36] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:43:28.839 [http-nio-8091-exec-36] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:43:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:103
25-02-25.21:43:30.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.21:43:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:101
25-02-25.21:43:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.21:43:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:105
25-02-25.21:43:50.022 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:43:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:43:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:35.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:40.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:44:55.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:44:57.258 [http-nio-8091-exec-29] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:44:57.260 [http-nio-8091-exec-29] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"930100203986","orderState":"create","orderTime":1740491009000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:44:57.260 [http-nio-8091-exec-29] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:44:57.262 [http-nio-8091-exec-29] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.21:44:57.262 [http-nio-8091-exec-29] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.21:44:57.266 [http-nio-8091-exec-29] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.21:44:57.266 [http-nio-8091-exec-29] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.21:44:57.266 [http-nio-8091-exec-29] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$bc5923cd.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:44:58.057 [http-nio-8091-exec-35] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:44:58.060 [http-nio-8091-exec-35] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"930100203986","orderState":"create","orderTime":1740491009000,"strategyId":100006,"userId":"xxx"}
25-02-25.21:44:58.060 [http-nio-8091-exec-35] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:44:58.062 [http-nio-8091-exec-35] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 101
25-02-25.21:44:58.062 [http-nio-8091-exec-35] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 101 rule_default
25-02-25.21:44:58.064 [http-nio-8091-exec-35] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:101
25-02-25.21:44:58.065 [http-nio-8091-exec-35] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:44:58.065 [http-nio-8091-exec-35] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 
25-02-25.21:44:58.076 [http-nio-8091-exec-35] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"74998207057","timestamp":1740491098066}
25-02-25.21:44:58.078 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"74998207057","timestamp":1740491098066}
25-02-25.21:44:59.691 [http-nio-8091-exec-31] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:44:59.708 [http-nio-8091-exec-31] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:44:59.710 [http-nio-8091-exec-31] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.21:44:59.710 [http-nio-8091-exec-31] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.21:44:59.714 [http-nio-8091-exec-31] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]}
25-02-25.21:44:59.714 [http-nio-8091-exec-31] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"1","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_1"}}
25-02-25.21:44:59.715 [http-nio-8091-exec-31] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.21:44:59.717 [http-nio-8091-exec-31] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:40
25-02-25.21:44:59.717 [http-nio-8091-exec-31] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:44:59.717 [http-nio-8091-exec-31] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.21:44:59.719 [http-nio-8091-exec-31] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:44:59.719 [http-nio-8091-exec-31] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 107 
25-02-25.21:44:59.729 [http-nio-8091-exec-31] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"32187524068","timestamp":1740491099721}
25-02-25.21:44:59.730 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"32187524068","timestamp":1740491099721}
25-02-25.21:45:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:04.319 [http-nio-8091-exec-37] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:45:04.338 [http-nio-8091-exec-37] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:45:04.340 [http-nio-8091-exec-37] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 101
25-02-25.21:45:04.340 [http-nio-8091-exec-37] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 101 rule_default
25-02-25.21:45:04.341 [http-nio-8091-exec-37] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:101
25-02-25.21:45:04.343 [http-nio-8091-exec-37] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:45:04.343 [http-nio-8091-exec-37] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 
25-02-25.21:45:04.355 [http-nio-8091-exec-37] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"90178319916","timestamp":1740491104344}
25-02-25.21:45:04.357 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"90178319916","timestamp":1740491104344}
25-02-25.21:45:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:101
25-02-25.21:45:05.604 [http-nio-8091-exec-38] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:45:05.622 [http-nio-8091-exec-38] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:45:05.624 [http-nio-8091-exec-38] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 106
25-02-25.21:45:05.624 [http-nio-8091-exec-38] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 106 rule_default
25-02-25.21:45:05.626 [http-nio-8091-exec-38] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:106
25-02-25.21:45:05.627 [http-nio-8091-exec-38] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:106 raffleCount:1 userRaffleCount:42
25-02-25.21:45:05.627 [http-nio-8091-exec-38] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:45:05.627 [http-nio-8091-exec-38] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:106
25-02-25.21:45:05.629 [http-nio-8091-exec-38] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:45:05.629 [http-nio-8091-exec-38] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 106 
25-02-25.21:45:05.639 [http-nio-8091-exec-38] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":106,"awardTitle":"3等奖","userId":"xxx"},"id":"31077893853","timestamp":1740491105630}
25-02-25.21:45:05.640 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":106,"awardTitle":"3等奖","userId":"xxx"},"id":"31077893853","timestamp":1740491105630}
25-02-25.21:45:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:107
25-02-25.21:45:10.022 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:101
25-02-25.21:45:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:106
25-02-25.21:45:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:45:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:45:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:00.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:20.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:20.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:30.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:45.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:46:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:46:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:25.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:30.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:40.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:45.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:47:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:47:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:15.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:45.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:48:50.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:48:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:15.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:25.693 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.21:49:25.705 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.21:49:26.032 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.21:49:26.631 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.21:49:27.219 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.21:49:27.219 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.21:49:31.676 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 45700 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.21:49:31.678 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.21:49:33.011 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.21:49:33.018 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.21:49:33.018 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.21:49:33.018 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.21:49:33.191 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.21:49:33.191 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1478 ms
25-02-25.21:49:33.399 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.21:49:34.166 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.21:49:34.176 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.21:49:35.812 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.21:49:35.822 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.21:49:35.823 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.21:49:35.861 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#782cc5fa:0/SimpleConnection@1d7f7962 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60604]
25-02-25.21:49:35.913 [main            ] INFO  Application            - Started Application in 4.684 seconds (JVM running for 6.182)
25-02-25.21:49:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:40.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:40.026 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.21:49:40.026 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.21:49:40.191 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.21:49:40.191 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.21:49:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:50.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:49:55.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:49:55.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:15.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:50:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:50:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:00.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:00.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:20.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:51:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:51:55.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:10.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:25.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:45.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:52:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:52:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:25.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:25.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:53:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:53:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:00.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:00.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:54:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:54:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:54:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:54:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:54:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:21.655 [http-nio-8091-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.21:54:21.655 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.21:54:21.656 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-02-25.21:54:21.728 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:54:21.816 [http-nio-8091-exec-1] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:54:35.103 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:54:35.105 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:54:37.583 [http-nio-8091-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 103
25-02-25.21:54:37.586 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 103 rule_default
25-02-25.21:54:37.586 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.21:54:37.681 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.21:54:37.698 [http-nio-8091-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:103
25-02-25.21:54:37.758 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:54:37.761 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 103 
25-02-25.21:55:25.177 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:55:25.178 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=1m17s496ms238µs700ns).
25-02-25.21:55:25.178 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=1m14s820ms18µs700ns).
25-02-25.21:55:25.178 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=1m14s819ms997µs700ns).
25-02-25.21:55:25.179 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:29.768 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"78001771056","timestamp":1740491729480}
25-02-25.21:55:29.776 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"78001771056","timestamp":1740491729480}
25-02-25.21:55:30.481 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:30.484 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:103
25-02-25.21:55:30.492 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:55:35.648 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:37.504 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:55:40.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:40.612 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:55:49.401 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:55:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:53.890 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:55:53.906 [http-nio-8091-exec-2] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:55:53.908 [http-nio-8091-exec-2] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.21:55:53.908 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.21:55:53.910 [http-nio-8091-exec-2] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.21:55:53.912 [http-nio-8091-exec-2] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:44
25-02-25.21:55:53.912 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.21:55:53.912 [http-nio-8091-exec-2] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.21:55:53.915 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.21:55:53.915 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 107 
25-02-25.21:55:53.926 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"02575083953","timestamp":1740491753915}
25-02-25.21:55:53.927 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"02575083953","timestamp":1740491753915}
25-02-25.21:55:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:55:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:55:56.927 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:55:56.941 [http-nio-8091-exec-9] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.21:55:56.943 [http-nio-8091-exec-9] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.21:55:56.944 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.21:55:56.945 [http-nio-8091-exec-9] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.21:55:56.947 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.21:55:56.947 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 104 
25-02-25.21:55:56.955 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"66549325376","timestamp":1740491756947}
25-02-25.21:55:56.956 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"66549325376","timestamp":1740491756947}
25-02-25.21:55:58.619 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:55:58.626 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.domain.activity.service.partake.RaffleActivityPartakeService.doFilterAccount(RaffleActivityPartakeService.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:61)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:56:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:107
25-02-25.21:56:00.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:00.500 [http-nio-8091-exec-13] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:56:00.503 [http-nio-8091-exec-13] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.domain.activity.service.partake.RaffleActivityPartakeService.doFilterAccount(RaffleActivityPartakeService.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:61)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:56:01.372 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:56:01.375 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.domain.activity.service.partake.RaffleActivityPartakeService.doFilterAccount(RaffleActivityPartakeService.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:61)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:56:02.019 [http-nio-8091-exec-15] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:56:02.022 [http-nio-8091-exec-15] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.domain.activity.service.partake.RaffleActivityPartakeService.doFilterAccount(RaffleActivityPartakeService.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:61)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:56:03.816 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.21:56:03.819 [http-nio-8091-exec-10] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.domain.activity.service.partake.RaffleActivityPartakeService.doFilterAccount(RaffleActivityPartakeService.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:61)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.21:56:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.21:56:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:40.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:56:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:56:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:00.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:30.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:35.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:57:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:55.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:57:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:00.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:10.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:35.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:58:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:55.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:58:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:20.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:20.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:30.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:35.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.21:59:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.21:59:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:05.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:10.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:40.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:45.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:00:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:00:55.028 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:15.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:40.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:01:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:01:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:20.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:20.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:40.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:02:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:02:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:00.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:15.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:50.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:03:55.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:03:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:00.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:00.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:50.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:04:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:04:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:00.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:10.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:45.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:05:50.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:05:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:06:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:06:55.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:15.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:45.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:50.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:07:50.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:07:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:05.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:35.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:40.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:50.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:08:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:08:55.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:15.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:25.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:09:55.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:09:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:25.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:45.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:45.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:50.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:10:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:10:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:25.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:35.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:40.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:11:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:11:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:05.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:10.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:20.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:30.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:35.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:12:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:12:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:10.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:30.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:35.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:40.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:50.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:13:55.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:13:55.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:10.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:15.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:14:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:14:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:00.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:35.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:15:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:15:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:00.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:15.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:25.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:25.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:16:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:16:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:05.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:17:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:17:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:00.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:15.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:25.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:30.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:35.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:45.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:50.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:18:55.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:18:55.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:05.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:05.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:15.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:15.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:30.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:30.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:35.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:45.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:19:50.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:55.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:19:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:20.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:30.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:35.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:40.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:20:55.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:20:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:00.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:30.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:45.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:21:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:21:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:05.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:05.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:15.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:20.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:20.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:35.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:45.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:50.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:22:50.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:22:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:10.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:20.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:35.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:44.817 [http-nio-8091-exec-14] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:23:44.838 [http-nio-8091-exec-14] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:23:44.872 [http-nio-8091-exec-14] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:113)
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:106)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d3bd8041.getRateRange(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.getRandomAwardId(StrategyArmoryDispatch.java:121)
	at org.example.domain.strategy.service.rule.chain.impl.DefaultLogicChain.logic(DefaultLogicChain.java:27)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:134)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:54)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:23:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:47.573 [http-nio-8091-exec-29] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.22:23:47.590 [http-nio-8091-exec-29] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.22:23:49.639 [http-nio-8091-exec-33] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:23:49.648 [http-nio-8091-exec-33] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"117781365328","orderState":"create","orderTime":1740493425000,"strategyId":100006,"userId":"xxx"}
25-02-25.22:23:49.648 [http-nio-8091-exec-33] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:23:49.650 [http-nio-8091-exec-33] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 102
25-02-25.22:23:49.650 [http-nio-8091-exec-33] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 102 rule_default
25-02-25.22:23:49.660 [http-nio-8091-exec-33] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]}
25-02-25.22:23:49.663 [http-nio-8091-exec-33] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_luck_award","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_luck_award"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_luck_award"}}
25-02-25.22:23:49.663 [http-nio-8091-exec-33] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:102
25-02-25.22:23:49.665 [http-nio-8091-exec-33] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:23:49.665 [http-nio-8091-exec-33] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 102 
25-02-25.22:23:49.675 [http-nio-8091-exec-33] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"41099924276","timestamp":1740493429666}
25-02-25.22:23:49.676 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":102,"awardTitle":"7等奖","userId":"xxx"},"id":"41099924276","timestamp":1740493429666}
25-02-25.22:23:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:52.600 [http-nio-8091-exec-17] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:23:52.616 [http-nio-8091-exec-17] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:23:52.617 [http-nio-8091-exec-17] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.22:23:52.617 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.22:23:52.621 [http-nio-8091-exec-17] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]}
25-02-25.22:23:52.621 [http-nio-8091-exec-17] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"1","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_1"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_1","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_1"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_1"}}
25-02-25.22:23:52.622 [http-nio-8091-exec-17] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.22:23:52.624 [http-nio-8091-exec-17] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:2
25-02-25.22:23:52.624 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.22:23:52.624 [http-nio-8091-exec-17] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.22:23:52.625 [http-nio-8091-exec-17] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.22:23:52.625 [http-nio-8091-exec-17] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 107 
25-02-25.22:23:52.635 [http-nio-8091-exec-17] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"29983175563","timestamp":1740493432626}
25-02-25.22:23:52.636 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"29983175563","timestamp":1740493432626}
25-02-25.22:23:53.548 [http-nio-8091-exec-18] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:23:53.563 [http-nio-8091-exec-18] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:23:53.564 [http-nio-8091-exec-18] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.22:23:53.564 [http-nio-8091-exec-18] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.22:23:53.566 [http-nio-8091-exec-18] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.22:23:53.567 [http-nio-8091-exec-18] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:23:53.567 [http-nio-8091-exec-18] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 105 
25-02-25.22:23:53.576 [http-nio-8091-exec-18] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"99549833656","timestamp":1740493433568}
25-02-25.22:23:53.577 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"99549833656","timestamp":1740493433568}
25-02-25.22:23:54.770 [http-nio-8091-exec-19] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:23:54.781 [http-nio-8091-exec-19] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:23:54.783 [http-nio-8091-exec-19] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 105
25-02-25.22:23:54.783 [http-nio-8091-exec-19] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 105 rule_default
25-02-25.22:23:54.785 [http-nio-8091-exec-19] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:105
25-02-25.22:23:54.786 [http-nio-8091-exec-19] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:23:54.786 [http-nio-8091-exec-19] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 105 
25-02-25.22:23:54.795 [http-nio-8091-exec-19] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"15672824490","timestamp":1740493434786}
25-02-25.22:23:54.796 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":105,"awardTitle":"4等奖","userId":"xxx"},"id":"15672824490","timestamp":1740493434786}
25-02-25.22:23:55.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:23:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:23:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:102
25-02-25.22:23:55.536 [http-nio-8091-exec-20] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:23:55.550 [http-nio-8091-exec-20] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:23:55.552 [http-nio-8091-exec-20] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.22:23:55.552 [http-nio-8091-exec-20] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.22:23:55.555 [http-nio-8091-exec-20] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.22:23:55.555 [http-nio-8091-exec-20] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.22:30:13.706 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:30:13.706 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=6m48s65ms213µs900ns).
25-02-25.22:30:13.707 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=6m48s66ms50µs400ns).
25-02-25.22:30:13.707 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=6m48s81ms30µs400ns).
25-02-25.22:30:16.439 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:30:16.441 [AMQP Connection 127.0.0.1:5672] WARN  ForgivingExceptionHandler - An unexpected connection driver error occurred (Exception message: Connection reset)
25-02-25.22:30:16.447 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:30:17.422 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:107
25-02-25.22:30:20.143 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:30:21.115 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:105
25-02-25.22:30:21.995 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:30:22.427 [http-nio-8091-exec-20] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d3bd8041.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:32:45.762 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=2m32s56ms479µs800ns).
25-02-25.22:32:45.762 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=2m32s56ms538µs900ns).
25-02-25.22:32:45.762 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:32:45.762 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=2m32s55ms706µs200ns).
25-02-25.22:32:45.763 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SimpleMessageListenerContainer - Restarting Consumer@508f4bb5: tags=[[amq.ctag-a2_osfY94ktXVfr04srw6A]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:5672/,2), conn: Proxy@8ce3f27 Shared Rabbit Connection: SimpleConnection@1d7f7962 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60604], acknowledgeMode=AUTO local queue size=0
25-02-25.22:32:45.763 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  SimpleMessageListenerContainer - Restarting Consumer@14993306: tags=[[amq.ctag-n87WUJvSldIePdfVPV8SJQ]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@127.0.0.1:5672/,1), conn: Proxy@8ce3f27 Shared Rabbit Connection: SimpleConnection@1d7f7962 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60604], acknowledgeMode=AUTO local queue size=0
25-02-25.22:32:45.766 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:32:45.766 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:105
25-02-25.22:32:45.770 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.22:32:45.783 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#782cc5fa:1/SimpleConnection@4c9e733b [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63244]
25-02-25.22:32:45.846 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:32:45.846 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-3] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:32:46.797 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:32:46.797 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-3] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:32:47.280 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:32:47.280 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:32:53.143 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 40544 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.22:32:53.145 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.22:32:54.114 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.22:32:54.120 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.22:32:54.120 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.22:32:54.120 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.22:32:54.267 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.22:32:54.267 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1097 ms
25-02-25.22:32:54.402 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.22:32:54.968 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:32:54.975 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:32:57.048 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.22:32:57.063 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.22:32:57.065 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.22:32:57.111 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#6e9a10cd:0/SimpleConnection@adc3344 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63346]
25-02-25.22:32:57.181 [main            ] INFO  Application            - Started Application in 4.374 seconds (JVM running for 8.105)
25-02-25.22:33:00.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:33:00.057 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:33:00.057 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:33:00.058 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:33:00.350 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:33:00.350 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:33:05.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:33:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:33:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:33:10.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:33:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:33:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:33:20.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:33:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:33:23.082 [http-nio-8091-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.22:33:23.082 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.22:33:23.083 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-02-25.22:33:23.253 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:33:23.490 [http-nio-8091-exec-2] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"033079683887","orderState":"create","orderTime":1740493436000,"strategyId":100006,"userId":"xxx"}
25-02-25.22:33:23.490 [http-nio-8091-exec-2] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:33:35.199 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:33:35.201 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:33:36.901 [http-nio-8091-exec-2] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 108
25-02-25.22:33:36.904 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 108 rule_default
25-02-25.22:33:37.277 [http-nio-8091-exec-2] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:33:37.352 [http-nio-8091-exec-2] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:34:02.153 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:02.157 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:02.207 [http-nio-8091-exec-2] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_2"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]}
25-02-25.22:34:02.218 [http-nio-8091-exec-2] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"2","treeId":"tree_lock_2","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_2"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_2","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_2"}}
25-02-25.22:34:11.309 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:12.624 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:15.254 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:23.443 [http-nio-8091-exec-2] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:108
25-02-25.22:34:23.444 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:23.449 [http-nio-8091-exec-2] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:108 raffleCount:2 userRaffleCount:5
25-02-25.22:34:23.450 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_lock code:0000
25-02-25.22:34:23.452 [http-nio-8091-exec-2] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:108
25-02-25.22:34:23.499 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_stock code:0001
25-02-25.22:34:23.499 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 108 
25-02-25.22:34:23.551 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":108,"awardTitle":"1等奖","userId":"xxx"},"id":"72299026587","timestamp":1740494063509}
25-02-25.22:34:23.563 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":108,"awardTitle":"1等奖","userId":"xxx"},"id":"72299026587","timestamp":1740494063509}
25-02-25.22:34:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:108
25-02-25.22:34:30.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:33.269 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:34:33.292 [http-nio-8091-exec-4] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:34:33.294 [http-nio-8091-exec-4] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 103
25-02-25.22:34:33.294 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 103 rule_default
25-02-25.22:34:33.297 [http-nio-8091-exec-4] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:103
25-02-25.22:34:33.299 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:34:33.299 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 103 
25-02-25.22:34:33.309 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"53689922196","timestamp":1740494073301}
25-02-25.22:34:33.310 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":103,"awardTitle":"6等奖","userId":"xxx"},"id":"53689922196","timestamp":1740494073301}
25-02-25.22:34:34.685 [http-nio-8091-exec-11] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:34:34.702 [http-nio-8091-exec-11] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:34:34.704 [http-nio-8091-exec-11] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.22:34:34.704 [http-nio-8091-exec-11] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.22:34:34.708 [http-nio-8091-exec-11] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.22:34:34.708 [http-nio-8091-exec-11] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.22:34:34.715 [http-nio-8091-exec-11] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$52047378.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:34:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:103
25-02-25.22:34:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:50.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:34:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:34:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:05.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:10.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:35.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:35.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:35.530 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:35:35.532 [http-nio-8091-exec-9] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"279718626925","orderState":"create","orderTime":1740494075000,"strategyId":100006,"userId":"xxx"}
25-02-25.22:35:35.532 [http-nio-8091-exec-9] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:35:35.534 [http-nio-8091-exec-9] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.22:35:35.534 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.22:35:35.536 [http-nio-8091-exec-9] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.22:35:35.537 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:35:35.537 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 104 
25-02-25.22:35:35.547 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"06675131777","timestamp":1740494135539}
25-02-25.22:35:35.548 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"06675131777","timestamp":1740494135539}
25-02-25.22:35:37.043 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:35:37.058 [http-nio-8091-exec-10] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:35:37.060 [http-nio-8091-exec-10] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 107
25-02-25.22:35:37.060 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 107 rule_default
25-02-25.22:35:37.062 [http-nio-8091-exec-10] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:107
25-02-25.22:35:37.063 [http-nio-8091-exec-10] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:107 raffleCount:1 userRaffleCount:8
25-02-25.22:35:37.063 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_lock code:0000
25-02-25.22:35:37.063 [http-nio-8091-exec-10] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:107
25-02-25.22:35:37.065 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_1 node:rule_stock code:0001
25-02-25.22:35:37.065 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 107 
25-02-25.22:35:37.076 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"92445723719","timestamp":1740494137066}
25-02-25.22:35:37.077 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":107,"awardTitle":"2等奖","userId":"xxx"},"id":"92445723719","timestamp":1740494137066}
25-02-25.22:35:38.068 [http-nio-8091-exec-24] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:35:38.083 [http-nio-8091-exec-24] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:35:38.085 [http-nio-8091-exec-24] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 101
25-02-25.22:35:38.085 [http-nio-8091-exec-24] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 101 rule_default
25-02-25.22:35:38.087 [http-nio-8091-exec-24] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:101
25-02-25.22:35:38.088 [http-nio-8091-exec-24] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:35:38.088 [http-nio-8091-exec-24] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 101 
25-02-25.22:35:38.096 [http-nio-8091-exec-24] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"30195275959","timestamp":1740494138088}
25-02-25.22:35:38.097 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"xxx"},"id":"30195275959","timestamp":1740494138088}
25-02-25.22:35:39.585 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:35:39.599 [http-nio-8091-exec-5] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:35:39.601 [http-nio-8091-exec-5] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 104
25-02-25.22:35:39.601 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 104 rule_default
25-02-25.22:35:39.602 [http-nio-8091-exec-5] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:104
25-02-25.22:35:39.603 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】 treeId:tree_luck_award node:rule_stock code:0001
25-02-25.22:35:39.603 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 104 
25-02-25.22:35:39.611 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"96623883324","timestamp":1740494139603}
25-02-25.22:35:39.612 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":104,"awardTitle":"5等奖","userId":"xxx"},"id":"96623883324","timestamp":1740494139603}
25-02-25.22:35:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.22:35:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:40.552 [http-nio-8091-exec-13] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:35:40.567 [http-nio-8091-exec-13] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:35:40.569 [http-nio-8091-exec-13] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: null
25-02-25.22:35:40.569 [http-nio-8091-exec-13] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 null rule_default
25-02-25.22:35:40.572 [http-nio-8091-exec-13] INFO  StrategyRepository     - tree_node_line 转为 Map ：{}
25-02-25.22:35:40.572 [http-nio-8091-exec-13] INFO  StrategyRepository     - tree_node 转为 Map ：{}
25-02-25.22:35:40.572 [http-nio-8091-exec-13] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.NullPointerException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVoByTreeId(StrategyRepository.java:233)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$52047378.queryRuleTreeVoByTreeId(<generated>)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:145)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:62)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:35:45.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:107
25-02-25.22:35:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:35:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:101
25-02-25.22:35:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:35:55.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:104
25-02-25.22:35:55.024 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:15.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:35.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:35.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:45.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:45.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:50.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:36:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:36:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:00.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:00.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:02.245 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:37:02.246 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:37:02.262 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:37:02.648 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:37:03.071 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:37:03.071 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:37:08.763 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 44704 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.22:37:08.764 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.22:37:09.620 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.22:37:09.624 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.22:37:09.625 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.22:37:09.625 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.22:37:09.738 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.22:37:09.738 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 949 ms
25-02-25.22:37:09.861 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.22:37:10.413 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:37:10.420 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:37:11.566 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.22:37:11.585 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.22:37:11.586 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.22:37:11.608 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#65a48cab:0/SimpleConnection@5814b4fb [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63733]
25-02-25.22:37:11.643 [main            ] INFO  Application            - Started Application in 3.144 seconds (JVM running for 4.104)
25-02-25.22:37:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:15.026 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:15.029 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:37:15.029 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:37:15.152 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:37:15.152 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:37:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:30.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:35.020 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:40.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:45.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:37:55.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:37:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:10.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:15.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:20.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:25.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:25.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:35.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:40.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:40.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:45.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:50.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:38:50.018 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:38:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:00.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:00.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:10.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:20.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:20.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:25.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:30.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:39:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:39:55.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:05.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:05.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:30.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:30.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:35.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:40.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:50.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:40:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:40:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:05.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:15.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:25.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:30.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:40.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:40.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:45.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:50.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:41:50.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:41:55.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:00.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:00.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:05.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:05.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:10.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:15.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:15.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:20.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:20.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:30.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:35.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:40.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:40.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:50.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:42:55.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:42:55.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:05.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:10.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:10.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:25.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:25.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:30.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:35.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:35.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:40.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:45.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:45.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:50.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:43:55.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:43:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:05.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:15.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:15.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:25.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:30.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:35.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:45.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:44:50.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:44:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:00.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:05.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:10.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:15.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:20.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:20.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:25.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:30.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:30.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:35.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:35.018 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:40.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:40.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:45.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:45.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:50.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:50.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:45:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:45:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:00.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:10.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:15.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:25.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:35.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:35.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:40.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:45.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:45.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:46:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:55.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:46:55.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:00.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:05.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:05.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:10.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:20.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:20.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:35.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:35.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:45.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:50.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:47:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:47:55.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:02.834 [http-nio-8091-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.22:48:02.835 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.22:48:02.835 [http-nio-8091-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-02-25.22:48:02.883 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:02.890 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:48:02.900 [http-nio-8091-exec-1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:48:02.977 [http-nio-8091-exec-1] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"214019756422","orderState":"create","orderTime":1740494141000,"strategyId":100006,"userId":"xxx"}
25-02-25.22:48:02.977 [http-nio-8091-exec-1] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:48:02.986 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.example.types.exception.AppException: null
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:113)
	at org.example.infrastructure.persistent.repository.StrategyRepository.getRateRange(StrategyRepository.java:106)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$19908ba7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$683cf284.getRateRange(<generated>)
	at org.example.domain.strategy.service.armory.StrategyArmoryDispatch.getRandomAwardId(StrategyArmoryDispatch.java:121)
	at org.example.domain.strategy.service.rule.chain.impl.DefaultLogicChain.logic(DefaultLogicChain.java:27)
	at org.example.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:134)
	at org.example.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:54)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:06.007 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.22:48:06.023 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.armory.ActivityArmory.assembleActivitySkuByActivityId(ActivityArmory.java:39)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:10.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:10.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:10.017 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.22:48:10.021 [http-nio-8091-exec-10] ERROR RaffleActivityController - 活动装配，数据预热，失败 activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityCountEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityCountByActivityCountId(ActivityRepository.java:120)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityCountByActivityCountId(<generated>)
	at org.example.domain.activity.service.armory.ActivityArmory.assembleActivitySkuByActivityId(ActivityArmory.java:34)
	at org.example.trigger.http.RaffleActivityController.armory(RaffleActivityController.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:12.369 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:12.370 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:14.361 [http-nio-8091-exec-14] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:14.362 [http-nio-8091-exec-14] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:15.078 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:15.079 [http-nio-8091-exec-9] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:15.752 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:15.753 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:16.262 [http-nio-8091-exec-18] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:16.262 [http-nio-8091-exec-18] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:16.629 [http-nio-8091-exec-25] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:16.630 [http-nio-8091-exec-25] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:17.062 [http-nio-8091-exec-11] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:17.063 [http-nio-8091-exec-11] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:17.419 [http-nio-8091-exec-38] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:17.420 [http-nio-8091-exec-38] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:20.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:30.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:32.640 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.22:48:32.659 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.22:48:35.016 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:35.017 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:36.422 [http-nio-8091-exec-16] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:36.423 [http-nio-8091-exec-16] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:37.380 [http-nio-8091-exec-43] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:37.380 [http-nio-8091-exec-43] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:38.115 [http-nio-8091-exec-44] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:38.117 [http-nio-8091-exec-44] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:38.730 [http-nio-8091-exec-15] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:38.730 [http-nio-8091-exec-15] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:39.259 [http-nio-8091-exec-48] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:39.260 [http-nio-8091-exec-48] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:39.783 [http-nio-8091-exec-49] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:48:39.784 [http-nio-8091-exec-49] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:48:40.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:40.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:45.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:45.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:48:55.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:48:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:00.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:00.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:05.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:10.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:15.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:25.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:25.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:30.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:35.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:40.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:40.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:45.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:45.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:49:50.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:49:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:00.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:05.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:05.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:10.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:10.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:15.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:15.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:25.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:25.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:50:30.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:50:32.995 [http-nio-8091-exec-23] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:51:00.544 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:00.544 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=45s46ms19µs800ns).
25-02-25.22:51:00.544 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=45s45ms979µs400ns).
25-02-25.22:51:00.544 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=57s497ms724µs600ns).
25-02-25.22:51:00.545 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:07.566 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:07.572 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:14.065 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:14.067 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:14.067 [http-nio-8091-exec-23] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to org.example.domain.activity.model.entity.ActivityEntity
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$7d3929d8.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:51:14.107 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:51:14.108 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:51:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:15.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:15.071 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:51:15.071 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:51:15.466 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:51:15.466 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:51:18.120 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 41880 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.22:51:18.122 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.22:51:18.974 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.22:51:18.978 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.22:51:18.978 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.22:51:18.979 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.22:51:19.084 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.22:51:19.085 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 941 ms
25-02-25.22:51:19.215 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.22:51:19.886 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:51:19.893 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:51:21.008 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.22:51:21.015 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.22:51:21.017 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.22:51:21.037 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#77ab5214:0/SimpleConnection@f0c1ae1 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 64464]
25-02-25.22:51:21.070 [main            ] INFO  Application            - Started Application in 3.209 seconds (JVM running for 4.077)
25-02-25.22:51:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:25.032 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:25.035 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:51:25.035 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:51:25.134 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:51:25.134 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:51:30.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:30.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:33.395 [http-nio-8091-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.22:51:33.395 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.22:51:33.396 [http-nio-8091-exec-2] INFO  DispatcherServlet      - Completed initialization in 1 ms
25-02-25.22:51:33.443 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:51:39.316 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:51:46.519 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:51:50.731 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:52:02.686 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:52:09.670 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:52:35.920 [scheduling-1    ] ERROR UpdateAwardStockJob    - 定时任务，更新奖品消耗库存失败
org.redisson.client.RedisTimeoutException: Command still hasn't been written into connection! Check connection with Redis node: 127.0.0.1/127.0.0.1:6379 for TCP packet drops. Try to increase nettyThreads setting.  Node source: NodeSource [slot=0, addr=null, redisClient=null, redirect=null, entry=null], connection: RedisConnection@198918376 [redisClient=[addr=redis://127.0.0.1:6379], channel=[id: 0x8757bf7b, L:/127.0.0.1:64458 - R:127.0.0.1/127.0.0.1:6379], currentCommand=CommandData [promise=java.util.concurrent.CompletableFuture@56fc59eb[Completed exceptionally], command=(GET), params=[big_market_activity_key_100301], codec=org.example.config.RedisClientConfig$RedisCodec], usage=1], command: (LPOP), params: [big_market_strategy_award_count_queue_key] after 3 retry attempts
	at org.redisson.command.RedisExecutor$1.run(RedisExecutor.java:272)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:52:37.761 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:52:40.131 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:52:40.133 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:52:40.847 [http-nio-8091-exec-2] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.redisson.client.RedisResponseTimeoutException: Redis server response timeout (3000 ms) occured after 3 retry attempts, is non-idempotent command: false Check connection with Redis node: 127.0.0.1/127.0.0.1:6379 for TCP packet drops or bandwidth limits.  Try to increase nettyThreads and/or timeout settings. Command: (GET), params: [big_market_activity_key_100301], channel: [id: 0xbbd197f7, L:/127.0.0.1:64456 - R:127.0.0.1/127.0.0.1:6379]
	at org.redisson.command.RedisExecutor.lambda$scheduleResponseTimeout$9(RedisExecutor.java:407)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715)
	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34)
	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703)
	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790)
	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:52:45.947 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:52:45.954 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:52:45.954 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:52:46.928 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:52:46.929 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:52:47.342 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:52:47.342 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:52:50.203 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 44268 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.22:52:50.204 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.22:52:50.947 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.22:52:50.950 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.22:52:50.951 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.22:52:50.951 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.22:52:51.063 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.22:52:51.064 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 840 ms
25-02-25.22:52:51.174 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.22:52:51.678 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:52:51.685 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:52:52.693 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.22:52:52.699 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.22:52:52.700 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.22:52:52.715 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#3d24420b:0/SimpleConnection@45037e16 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 64648]
25-02-25.22:52:52.742 [main            ] INFO  Application            - Started Application in 2.752 seconds (JVM running for 3.755)
25-02-25.22:52:55.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:52:55.025 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:52:55.028 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:52:55.028 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:52:55.126 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:52:55.126 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:53:00.000 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:05.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:05.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:10.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:15.013 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:20.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:25.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:30.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:35.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:36.384 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:53:36.384 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:53:37.064 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:53:37.064 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:53:37.472 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:53:37.472 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:53:42.743 [main            ] INFO  Application            - Starting Application using Java 1.8.0_202 on X with PID 39376 (D:\JavaStudy\big-market\big-market-app\target\classes started by 12135 in D:\JavaStudy\big-market)
25-02-25.22:53:42.744 [main            ] INFO  Application            - The following 1 profile is active: "dev"
25-02-25.22:53:43.480 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
25-02-25.22:53:43.484 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
25-02-25.22:53:43.484 [main            ] INFO  StandardService        - Starting service [Tomcat]
25-02-25.22:53:43.484 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
25-02-25.22:53:43.594 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
25-02-25.22:53:43.594 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 832 ms
25-02-25.22:53:43.704 [main            ] INFO  Version                - Redisson 3.23.4
25-02-25.22:53:44.217 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:53:44.223 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:6379
25-02-25.22:53:45.239 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
25-02-25.22:53:45.245 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
25-02-25.22:53:45.246 [main            ] INFO  CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
25-02-25.22:53:45.261 [main            ] INFO  CachingConnectionFactory - Created new connection: rabbitConnectionFactory#27443560:0/SimpleConnection@afde064 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 64809]
25-02-25.22:53:45.290 [main            ] INFO  Application            - Started Application in 2.755 seconds (JVM running for 3.604)
25-02-25.22:53:50.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:50.028 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:50.030 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:53:50.030 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:53:50.119 [pool-3-thread-2 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:53:50.119 [pool-3-thread-1 ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:53:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:53:55.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:53:57.772 [http-nio-8091-exec-6] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
25-02-25.22:53:57.772 [http-nio-8091-exec-6] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
25-02-25.22:53:57.773 [http-nio-8091-exec-6] INFO  DispatcherServlet      - Completed initialization in 0 ms
25-02-25.22:53:57.891 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:53:57.913 [redisson-netty-2-12] ERROR CommandDecoder         - Unable to decode data. channel: [id: 0xd81e235c, L:/127.0.0.1:64804 - R:127.0.0.1/127.0.0.1:6379], reply: ReplayingDecoderByteBuf(ridx=248, widx=248), command: (GET), promise: java.util.concurrent.CompletableFuture@2a1b6d9e[Not completed, 1 dependents], params: [big_market_activity_key_100301]
com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 121
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
25-02-25.22:53:57.917 [redisson-netty-2-12] ERROR ErrorsLoggingHandler   - Exception occured. Channel: [id: 0xd81e235c, L:/127.0.0.1:64804 - R:127.0.0.1/127.0.0.1:6379]
io.netty.handler.codec.DecoderException: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 121
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 121
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	... 17 common frames omitted
25-02-25.22:53:57.919 [http-nio-8091-exec-6] ERROR RaffleActivityController - 活动抽奖失败 userId:xxx activityId:100301
org.redisson.client.RedisException: Unexpected exception while processing command
	at org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:299)
	at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:116)
	at org.redisson.RedissonObject.get(RedissonObject.java:90)
	at org.redisson.RedissonBucket.get(RedissonBucket.java:135)
	at org.example.infrastructure.persistent.redis.RedissonService.getValue(RedissonService.java:31)
	at org.example.infrastructure.persistent.repository.ActivityRepository.queryRaffleActivityByActivityId(ActivityRepository.java:99)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$5fd30843.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.example.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$d1555b21.queryRaffleActivityByActivityId(<generated>)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:42)
	at org.example.domain.activity.service.partake.AbstractRaffleActivityPartake.createOrder(AbstractRaffleActivityPartake.java:77)
	at org.example.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 121
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:159)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:758)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:869)
	at org.redisson.codec.Kryo5Codec$4.decode(Kryo5Codec.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:394)
	at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:205)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:144)
	at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
25-02-25.22:54:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:10.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:10.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:12.630 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动装配，数据预热，开始 activityId:100301
25-02-25.22:54:12.631 [http-nio-8091-exec-3] INFO  HikariDataSource       - Retail_HikariCP - Starting...
25-02-25.22:54:12.641 [http-nio-8091-exec-3] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
25-02-25.22:54:12.673 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动装配，数据预热，完成 activityId:100301
25-02-25.22:54:14.924 [http-nio-8091-exec-19] INFO  RaffleActivityController - 活动装配，数据预热，开始 userId:xxx activityId:100301
25-02-25.22:54:14.983 [http-nio-8091-exec-19] INFO  AbstractRaffleActivityPartake - 创建参与活动订单[已存在未消费] userId:xxx activityId:100301 userRaffleOrderEntity:{"activityId":100301,"activityName":"测试活动","orderId":"214019756422","orderState":"create","orderTime":1740494141000,"strategyId":100006,"userId":"xxx"}
25-02-25.22:54:14.985 [http-nio-8091-exec-19] INFO  RaffleActivityController - 抽奖活动，创建订单 userId：xxx activityId：100301 orderId：100301
25-02-25.22:54:14.988 [http-nio-8091-exec-19] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId：xxx strategyId: 100006 ruleModel: rule_default awardId: 108
25-02-25.22:54:14.988 [http-nio-8091-exec-19] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 xxx 100006 108 rule_default
25-02-25.22:54:14.998 [http-nio-8091-exec-19] INFO  StrategyRepository     - tree_node_line 转为 Map ：{"rule_lock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_2"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}],"rule_stock":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]}
25-02-25.22:54:15.002 [http-nio-8091-exec-19] INFO  StrategyRepository     - tree_node 转为 Map ：{"rule_lock":{"ruleDesc":"限定用户已完成N次抽奖后解锁","ruleKey":"rule_lock","ruleValue":"2","treeId":"tree_lock_2","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_stock","treeId":"tree_lock_2"},{"ruleLimitType":"EQUAL","ruleLimitValue":"TAKE_OVER","ruleNodeFrom":"rule_lock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]},"rule_stock":{"ruleDesc":"库存扣减规则","ruleKey":"rule_stock","treeId":"tree_lock_2","treeNodeLineVoList":[{"ruleLimitType":"EQUAL","ruleLimitValue":"ALLOW","ruleNodeFrom":"rule_stock","ruleNodeTo":"rule_luck_award","treeId":"tree_lock_2"}]},"rule_luck_award":{"ruleDesc":"兜底奖品随机积分","ruleKey":"rule_luck_award","ruleValue":"101:1,100","treeId":"tree_lock_2"}}
25-02-25.22:54:15.004 [http-nio-8091-exec-19] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁 userId:xxx strategyId:100006 awardId:108
25-02-25.22:54:15.008 [http-nio-8091-exec-19] INFO  RuleLockLogicTreeNode  - 规则过滤 - 次数锁[放行] userId:xxx strategyId:100006 awardId:108 raffleCount:2 userRaffleCount:11
25-02-25.22:54:15.008 [http-nio-8091-exec-19] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_lock code:0000
25-02-25.22:54:15.008 [http-nio-8091-exec-19] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:xxx strategyId:100006 awardId:108
25-02-25.22:54:15.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:15.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:15.021 [http-nio-8091-exec-19] INFO  DecisionTreeEngine     - 决策树引擎【规则树】 treeId:tree_lock_2 node:rule_stock code:0001
25-02-25.22:54:15.021 [http-nio-8091-exec-19] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 xxx 100006 108 
25-02-25.22:54:15.045 [http-nio-8091-exec-19] INFO  EventPublisher         - 发送MQ消息, topic:send_award message:{"data":{"awardId":108,"awardTitle":"1等奖","userId":"xxx"},"id":"45043672872","timestamp":1740495255025}
25-02-25.22:54:15.048 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  SendAwardCustomer      - 监听用户奖品发送消息 topic:${spring.rabbitmq.topic.send_award message:{"data":{"awardId":108,"awardTitle":"1等奖","userId":"xxx"},"id":"45043672872","timestamp":1740495255025}
25-02-25.22:54:20.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:20.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存 strategyId:100006 awardId:108
25-02-25.22:54:25.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:25.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:30.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:30.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:35.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:40.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:45.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:50.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:50.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:54:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:54:55.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:05.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:10.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:10.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:20.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:20.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:25.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:30.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:30.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:35.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:35.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:40.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:45.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:45.017 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:50.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:50.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:55:55.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:55:55.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:00.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:00.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:05.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:05.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:10.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:15.008 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:15.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:20.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:20.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:25.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:30.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:40.012 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:40.013 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:45.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:50.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:56:50.011 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:55.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:56:55.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:00.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:00.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:05.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:05.004 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:10.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:10.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:15.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:15.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:20.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:20.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:25.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:25.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:30.005 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:30.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:40.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:40.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:45.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:50.008 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:50.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:57:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:57:55.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:00.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:00.015 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:05.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:05.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:10.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:15.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:15.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:20.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:20.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:25.014 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:25.014 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:30.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:30.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:35.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:35.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:40.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:40.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:45.003 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:45.005 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:50.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:50.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:58:55.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:58:55.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:00.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:00.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:05.009 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:05.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:10.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:10.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:15.011 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:15.012 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:20.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:20.007 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:25.002 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:25.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:30.010 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:30.010 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:35.006 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:35.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:40.015 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:40.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:45.006 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:45.007 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:50.001 [scheduling-1    ] INFO  UpdateActivitySkuStockJob - 定时任务，更新活动sku库存【延时队列获取，降低对数据库的更新频次，不要产生竞争】
25-02-25.22:59:50.002 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品消耗库存【延迟队列获取，降低对数据库的更新频次，不会产生竞争】
25-02-25.22:59:53.152 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:59:53.153 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Waiting for workers to finish.
25-02-25.22:59:53.568 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:59:54.011 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  SimpleMessageListenerContainer - Successfully waited for workers to finish.
25-02-25.22:59:54.450 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
25-02-25.22:59:54.450 [SpringApplicationShutdownHook] INFO  SimpleMessageListenerContainer - Shutdown ignored - container is already stopped
